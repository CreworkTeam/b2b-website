---
import MainLayout from '@/layouts/main-layout.astro';
import BlogHeader from '@/components/blog/blog-header.astro';
import Section from '@/components/section.astro';
import TOC from '@/components/blog/TOC.astro';
import { socials, getSocialShareLinks } from '@/constants';
import { Image } from 'astro:assets';
import TalkToUs from '@/components/talk-to-us.astro';
import { getCollection } from 'astro:content';
import BlogCard from '@/components/blog/blog-card';
import BtnClipBoard from '@/components/blog/btn-clipboard';

const { blogData } = Astro.props;
const {
  data: { blogTitle, blogDescription, blogCategories },
  headings,
  slug,
} = blogData;

const url = Astro.url.pathname;

const blogs = await getCollection('blogs');
const recommendations = blogs
  .filter(({ data, slug: blogSlug }) => {
    const isSameCategory = data.blogCategories.some((category: any) =>
      blogCategories.includes(category),
    );
    return isSameCategory && blogSlug !== slug;
  })
  .slice(0, 2);
---

<MainLayout title={blogTitle} description={blogDescription}>
  <Section className="space-y-4 border-b-0 md:space-y-16">
    <BlogHeader {...blogData} />
    <div class="flex flex-col-reverse gap-12 md:flex-row md:gap-8" id="article-content">
      <div class="prose max-w-none flex-1">
        <slot />
        <div>
          <h4>Tags</h4>
          <div class="flex gap-2">
            {
              blogCategories.map((category) => (
                <div class="rounded-md border border-[#D8D8D8] bg-[#F4F4F4] px-2 py-1 text-sm font-normal text-[#3E3E3E] no-underline">
                  {category}
                </div>
              ))
            }
          </div>
        </div>
      </div>
      <div class="top-5 h-fit space-y-4 md:sticky md:w-3/12" id="toc">
        <div class="space-y-2">
          {
            headings && headings.length > 0 && (
              <>
                <h4 class="text-black">Contents</h4>
                <TOC headings={headings} />
              </>
            )
          }
        </div>
        <div class="space-y-2">
          <h4 class="text-black">Share</h4>
          <div class="flex justify-start gap-2">
            {
              socials.map((social) => (
                <a
                  href={getSocialShareLinks({ url: url, title: blogTitle })[social.name]}
                  target="_blank"
                  class="flex h-10 w-10 items-center justify-center rounded-full bg-[#F6F6F6] shadow-[0px_2px_2.5px_0px_#00000033]"
                >
                  <label class="sr-only">{social.name}</label>
                  <Image
                    src={social.icon}
                    alt={social.name}
                    class="h-4 w-4"
                    width={16}
                    height={16}
                  />
                </a>
              ))
            }
            <BtnClipBoard url={url} client:load />
          </div>
        </div>
      </div>
    </div>
    <div class="space-y-6">
      <h2 class="font-bold">Recomendations</h2>
      <div class="flex flex-col md:flex-row">
        {
          recommendations.map(({ data, slug }) => (
            <div class="w-full py-4 md:w-1/2 md:p-4">
              <BlogCard {...data} url={`/blog/${slug}`} />
            </div>
          ))
        }
      </div>
    </div>
  </Section>
  <TalkToUs text="Ready to go from idea to MVP?" />
</MainLayout>
<script>
  import { setupButtonTracking } from '../utils/mixpanel';
  setupButtonTracking({
    pageName: 'BlogPage',
  });

  function addIntersectionObserver() {
    const observer = new IntersectionObserver((sections) => {
      sections.forEach((section) => {
        const heading = section.target.querySelector('h2, h3, h4, h5');
        if (!heading) return;
        const id = heading.getAttribute('id');

        // Get the link to this section's heading
        const link = document.querySelector(`#toc li a[href="#${id}"]`);
        if (!link) return;

        if (section.isIntersecting) {
          link.classList.add('underline');
        } else {
          link.classList.remove('underline');
        }
      });
    });

    document.querySelectorAll('#article-content section').forEach((section) => {
      observer.observe(section);
    });
  }

  addIntersectionObserver();
</script>
